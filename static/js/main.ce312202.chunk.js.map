{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccout","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","deleteDoc","doc","id","deleteObject","ref","attachmentUrl","toggleEditing","updateDoc","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","uid","uuidv4","uploadString","response","getDownloadURL","createdAt","Date","now","creatorId","addDoc","collection","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","query","orderBy","snapshot","nweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","currentUser","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce312202.chunk.js","sourcesContent":["import { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { initializeApp } from \"firebase/app\";\nimport { getStorage } from \"firebase/storage\";\n\nimport \"firebase/database\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nconst app = initializeApp(firebaseConfig);\n\nexport const authService = getAuth(app);\nexport const dbService = getFirestore();\nexport const storageService = getStorage();\n","import { authService } from \"../fbase\";\nimport React, { useState } from \"react\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccout, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccout) {\n        data = await createUserWithEmailAndPassword(\n          authService,\n          email,\n          password\n        );\n      } else {\n        data = await signInWithEmailAndPassword(authService, email, password);\n      }\n      console.log(data);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccout ? \"Create Account\" : \"Sign In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccout ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\nexport default AuthForm;\n","import { authService } from \"../fbase\";\nimport React from \"react\";\nimport {\n  GoogleAuthProvider,\n  GithubAuthProvider,\n  signInWithPopup,\n} from \"firebase/auth\";\nimport AuthForm from \"../components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new GithubAuthProvider();\n    }\n    await signInWithPopup(authService, provider);\n  };\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />{\" \"}\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import { dbService, storageService } from \"../fbase\";\nimport React, { useState } from \"react\";\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\nimport { deleteObject, ref } from \"@firebase/storage\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n    // console.log(ok);\n    if (ok) {\n      //delete me\n      await deleteDoc(doc(dbService, `nweets/${nweetObj.id}`));\n      await deleteObject(ref(storageService, nweetObj.attachmentUrl));\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await updateDoc(doc(dbService, `nweets/${nweetObj.id}`), {\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          {isOwner && (\n            <>\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                <input\n                  onChange={onChange}\n                  type=\"text\"\n                  placeholder=\"Edit yuer nweet\"\n                  value={newNweet}\n                  required\n                  autoFocus\n                  className=\"formInput\"\n                />\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n              </form>\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                Cancel\n              </span>{\" \"}\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n\n          {isOwner && (\n            <div class=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\nexport default Nweet;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"../fbase\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { ref, uploadString, getDownloadURL } from \"@firebase/storage\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    if (nweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\n      const response = await uploadString(\n        attachmentRef,\n        attachment,\n        \"data_url\"\n      );\n      attachmentUrl = await getDownloadURL(response.ref);\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n\n    await addDoc(collection(dbService, \"nweets\"), nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    // console.log(event.target.files);\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>{\" \"}\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import { dbService } from \"../fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { collection, onSnapshot, query, orderBy } from \"firebase/firestore\";\nimport Nweet from \"../components/Nweet\";\nimport NweetFactory from \"../components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    onSnapshot(\n      query(collection(dbService, \"nweets\"), orderBy(\"createdAt\", \"desc\")),\n      (snapshot) => {\n        const nweetArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setNweets(nweetArray);\n      }\n    );\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>{\" \"}\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>{\" \"}\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;\n","import React, { useState } from \"react\";\nimport { authService } from \"../fbase\";\nimport { useHistory } from \"react-router-dom\";\nimport { updateProfile } from \"@firebase/auth\";\n\n// import {\n//   collection,\n//   getDocs,\n//   query,\n//   where,\n//   orderBy,\n// } from \"@firebase/firestore\";\n// import { dbService } from \"fbase\";\n\nconst Profile = ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await updateProfile(await authService.currentUser, {\n      displayName: newDisplayName,\n    });\n    refreshUser();\n  };\n\n  //   const getMyNweets = async () => {\n  //     const nweets = query(\n  //       collection(dbService, \"nweets\"),\n  //       where(\"creatorId\", \"==\", userObj.uid),\n  //       orderBy(\"createdAt\")\n  //     );\n  //     const querySnapshot = await getDocs(nweets);\n  //     querySnapshot.forEach((doc) => {\n  //       console.log(doc.id, \" => \", doc.data());\n  //     });\n  //   };\n\n  //   useEffect(() => {\n  //     getMyNweets();\n  //   }, []);\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          type=\"text\"\n          onChange={onChange}\n          placeholder='\"Display Name'\n          value={newDisplayName}\n          autoFocus\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />{\" \"}\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Navigation from \"../components/Navigation\";\nimport Profile from \"../routes/Profile\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      {/* &&는 Navigation이 존재하려면 isLoggedIn이 true여야 한다  */}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            {\" \"}\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"../components/Router\";\nimport { authService } from \"../fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n    });\n    // setUserObj(user)로 하면 user객체안에는 너무많은 값들이 있어서 리액트가 감당을 못한다\n    // 그래서 필요한 정보만 변경 해야한다.\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}